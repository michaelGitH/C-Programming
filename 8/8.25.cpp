#include<iostream>
using namespace std;

//                   Псевдокод mazeTravers
// Пройтись по лабиринту и найти точку входа в одной из стенок лабиринта
//		Инициировать статический счетчик пути нулем
//		Если счетчик равен нулю
//	  		Пока не найдена точка
//   			Запустить цикл поиска точки по первой строке,
//				Запустить цикл поиска точки по первому столбцу,
//				Запустить цикл поиска точки по пероследней строке,
//				Запустить цикл поиска точки по последнему столбцу.
//					Если точка найдена, запомнить ее положение
//					Инкременитровать счетчик пути
//
//
// Начать движение к противоположной стенке лабиринта
//		Если счетчик пути равен 1
//			
//
//
//
//
//
//
//
// Держась правой стороны, следовать по точкам к выходу
//
//
//
//
//
//




void mazeTravers ( char[][ 12 ], int, int );

int main()
{
	const int size = 12;
	char lab[ size ][ size ] = 
	{ { '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#' },
	  { '#', '.', '.', '.', '#', '.', '.', '.', '.', '.', '.', '#' },	
	  { '.', '.', '#', '.', '#', '.', '#', '#', '#', '#', '.', '#' },
	  { '#', '#', '#', '.', '#', '.', '.', '.', '.', '#', '.', '#' },
	  { '#', '.', '.', '.', '.', '#', '#', '#', '.', '#', '.', '.' },
	  { '#', '#', '#', '#', '.', '#', '.', '#', '.', '#', '.', '#' },
	  { '#', '.', '.', '#', '.', '#', '.', '#', '.', '#', '.', '#' },
	  { '#', '#', '.', '#', '.', '#', '.', '#', '.', '#', '.', '#' },
	  { '#', '.', '.', '.', '.', '.', '.', '.', '.', '#', '.', '#' },
	  { '#', '#', '#', '#', '#', '#', '.', '#', '#', '#', '.', '#' },
	  { '#', '.', '.', '.', '.', '.', '.', '#', '.', '.', '.', '#' },
	  { '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#' }, };

	for ( int i = 0; i < size; i++ )
	{
		for ( int j = 0; j < size; j++ )
			cout << lab[ i ][ j ] << " ";
		cout << endl;
	}


	return 0;
}


	
