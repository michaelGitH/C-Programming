8.26. (Генератор случайных лабиринтов) Напишите функцию mazeGenerator,
имеющую параметром двумерный символьный массив 12 на 12, которая 
генерирует лабиринт при помощи случайных чисел. Функция должна производить 
лабиринты, имеющие вход и выход. Испытайте вашу функцию mazeTraverse из
упражнения 8.25 на нескольких лабиринтах.

8.27. (Лабиринты произвольного размера) Обобщите функции mazeTraverse и maze-
Generator из упражнений 8.25 и 8.26 для работы с лабиринтами произвольной
ширины и высоты.

8.33. (Лимерики) Лимерик — юмористическое стихотворение из пяти строк, в 
котором первая и вторая строки рифмуются с пятой, а третья рифмуется с четвертой.
Используя методику, рассмотренную в упражнении 8.32, напишите программу,
которая производит случайные стихотворения. Отладка программы до уровня,
на котором она создавала бы хорошие стихотворения, является серьезной и 
увлекательной проблемой, но результат будет стоить усилий!

9.13. (Усовершенствование класса Rectangle) Модифицируйте класс Rectangle из
упражнения 9.12, включив в него функцию draw, которая выводит 
прямоугольник внутри рамки 25 на 25, охватывающей часть первого квадранта, 
содержащую прямоугольник. Предусмотрите функцию setFillCharacter для задания
символа, которым будет заполняться внутренность прямоугольника, и функцию
setPerimeterCharacter для задания символа, которым будет нарисован его 
периметр. Если вы честолюбивы, то можете написать функции для масштабирования
прямоугольника, вращения и перемещения его в пределах определенной области
первого квадранта.

11.9. (Упражнение на «элементарную» перегрузку операций) Чтобы в полной мере 
оценить осторожность, которая требуется при выборе операций для перегрузки, 
перечислите все перегружаемые операции C++, и для каждой из них укажите 
возможный смысл (или несколько, если это целесообразно) для нескольких  
классов, которые вы изучали в тексте. Мы предлагаем попытаться сделать это для 
классов 
a) Array 
b) Stack 
c) String 
После того как вы это сделаете, выскажите свои замечания о том, какие  
операции могут иметь смысл для широкого разнообразия классов. Какие операции 
предсталяются малоценными в плане перегрузки? Какие представляются  
сомнительными? 

11.10. Теперь проделайте работу, обратную описанной в упражнении 11.9. Перечислите 
все перегружаемые операции C++. Для каждой укажите, для какого, по вашему 
мнению, возможного «элементаного действия» должна использоваться данная 
операция. Если таких подходящих действий есть несколько отличных  
кандидатов, перечислите их все. 

11.16. Изучите функции библиотеки обработки строк С и реализуйте каждую из этих 
функций как часть класса String (рис. 11.9-11.19). Используйте затем эти  
функции для выполнения операций с текстами. 

